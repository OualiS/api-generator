import * as OctokitTypes from "@octokit/types";
export declare type AnyResponse = OctokitTypes.OctokitResponse<any>;
export declare type EndpointDefaults = OctokitTypes.EndpointDefaults;
export declare type EndpointOptions = OctokitTypes.EndpointOptions;
export declare type RequestParameters = OctokitTypes.RequestParameters;
export declare type Route = OctokitTypes.Route;
export declare type RequestInterface = OctokitTypes.RequestInterface;
export declare type StrategyInterface = OctokitTypes.StrategyInterface<[
    StrategyOptions
], [
    AuthOptions?
], Authentication>;
declare type TokenOptions = {
    [option: string]: any;
};
export declare type StrategyOptions = {
    username: string;
    password: string;
    on2Fa(): string | Promise<string>;
    token?: TokenOptions;
    request?: RequestInterface;
};
export declare type WithRequest = {
    request: RequestInterface;
};
export declare type AuthOptions = {
    type?: "token" | "basic";
    refresh?: Boolean;
};
export declare type State = {
    strategyOptions: StrategyOptions & {
        token: TokenOptions;
    };
    request: RequestInterface;
    token?: TokenAuthentication;
    totp?: string;
};
export declare type Token = string;
export declare type BasicAuthentication = {
    type: "basic";
    username: string;
    password: string;
};
export declare type TokenAuthentication = {
    type: "token";
    tokenType: "oauth";
    id: number;
    token: Token;
    username: string;
};
export declare type Authentication = BasicAuthentication | TokenAuthentication;
export {};
